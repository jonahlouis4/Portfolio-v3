[{"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\index.js":"1","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\App.js":"2","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\reportWebVitals.js":"3","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Header.js":"4","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\SideNav.js":"5","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Introduction.js":"6","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Projects.js":"7","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\ProjectDisplay.js":"8","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Technologies.js":"9","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Footer.js":"10"},{"size":500,"mtime":1611938747404,"results":"11","hashOfConfig":"12"},{"size":2663,"mtime":1613787072862,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611938747404,"results":"14","hashOfConfig":"12"},{"size":3931,"mtime":1613777645310,"results":"15","hashOfConfig":"12"},{"size":2067,"mtime":1613777655450,"results":"16","hashOfConfig":"12"},{"size":3186,"mtime":1613696163189,"results":"17","hashOfConfig":"12"},{"size":3624,"mtime":1613697207503,"results":"18","hashOfConfig":"12"},{"size":2077,"mtime":1613698187633,"results":"19","hashOfConfig":"12"},{"size":5904,"mtime":1613695784833,"results":"20","hashOfConfig":"12"},{"size":520,"mtime":1613787108049,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"o77mnd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\index.js",[],["45","46"],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\App.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\reportWebVitals.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Header.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\SideNav.js",["47"],"import React from 'react'\r\nimport './SideNav.css'\r\n\r\nimport { Typography, Button } from 'antd'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\n\r\nconst { Text } = Typography;\r\n\r\nconst sideNavStyle = {\r\n    height: '100%',\r\n    position: 'fixed',\r\n    zIndex: '1',\r\n    top: '0',\r\n    right: '0',\r\n    backgroundColor: 'white',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    overflowX: 'hidden',\r\n    transition: '0.5s',\r\n    paddingTop: '60px',\r\n    whiteSpace: 'nowrap'\r\n}\r\n\r\nconst closeBtn = {\r\n    position: 'absolute',\r\n    padding: '5px',\r\n    top: '0',\r\n    left: '0',\r\n    color: '#818181'\r\n}\r\n\r\n/**\r\n * Side navigation for smaller and mobile view\r\n * Reference: https://www.w3schools.com/howto/howto_js_sidenav.asp\r\n * @param {boolean} isOpen - State of side navigation. Either true or false.\r\n * @param {function} sideNavControl - Closes the side navigation\r\n * @param {object} sectionName - Contains all section names\r\n */\r\nconst SideNav = ({isOpen, sideNavControl, sectionName, sectionLink}) => {\r\n    /** Holds the classname for when the navigation is OPEN */\r\n    const navOpenClass = \"sideNav-open\";\r\n    /** Holds the classname for when the navigation is CLOSED */\r\n    const navCloseClass = \"sideNav-close\";\r\n    \r\n    /** Closes the side navigation */\r\n    const navControl = () => {\r\n        var open = isOpen;\r\n        open = false;\r\n        sideNavControl(open);\r\n\r\n        document.body.style.overflow = \"auto\";\r\n    }\r\n\r\n    return (\r\n        <div style={sideNavStyle} className={isOpen ? navOpenClass : navCloseClass}>\r\n            <a><CloseOutlined style={closeBtn} onClick={navControl} className=\"options\"/></a>\r\n            <a href={'#'+sectionLink.section1}><Text type=\"secondary\" className=\"options\">{sectionName.section1}</Text></a>\r\n            <a href={'#'+sectionLink.section2}><Text type=\"secondary\" className=\"options\">{sectionName.section2}</Text></a>\r\n            <Button id=\"option-btn\" size=\"large\">{sectionName.section3}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideNav\r\n","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Introduction.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Projects.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\ProjectDisplay.js",["48","49"],"import React from 'react'\r\nimport { Card } from 'antd';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faReact, faPhp } from '@fortawesome/free-brands-svg-icons'\r\nimport { GithubOutlined, ExportOutlined } from '@ant-design/icons';\r\n\r\nconst { Meta } = Card;\r\n\r\n/**\r\n * Returns a formatted card for each individual project\r\n * @param {string} iconName - Icon name for Font Awesome, language/framework of project\r\n * @param {string} projectName - The title of the project\r\n * @param {string} description - The description of the project\r\n * @param {string} github - The github url of the project\r\n * @param {string} url - the direct url of the project\r\n * @param {boolean} disabled - disables the url link if equal to false\r\n */\r\nconst ProjectDisplay = ({iconName, projectName, description, github, url, disabled}) => {\r\n    \r\n    /** Returns the appropriate icon */\r\n    function iconDisplay() {\r\n        if (iconName === \"faReact\") {\r\n            // Color = #00d8ff\r\n            return <FontAwesomeIcon icon={faReact} size=\"4x\"/>\r\n        } else if (iconName === \"faPhp\") {\r\n            // Color = #8993be\r\n            return <FontAwesomeIcon icon={faPhp} size=\"4x\"/>\r\n        }\r\n    }\r\n\r\n    /** Returns an active or disabled URL link depending on the disabled parameter*/\r\n    function urlActive() {\r\n        if (!disabled) {\r\n            return <a href={url} target=\"_blank\"><ExportOutlined key=\"url\" /></a>\r\n        } else {\r\n            return <ExportOutlined key=\"url\" style={{cursor: 'not-allowed', fontSize: '14px'}}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card\r\n        hoverable\r\n        actions={[\r\n            <a href={github} target=\"_blank\"><GithubOutlined key=\"github\" /></a>,\r\n            urlActive()\r\n            ]}\r\n        >\r\n            <div \r\n            style={{textAlign:'center', paddingBottom:'20px', color:'#434343'}}\r\n            >\r\n                {iconDisplay()}\r\n            </div>\r\n            <Meta title={projectName} description={description} />  \r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default ProjectDisplay\r\n","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Technologies.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Footer.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":55,"column":13,"nodeType":"56","endLine":55,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":35,"column":20,"nodeType":"56","endLine":35,"endColumn":50},{"ruleId":"57","severity":1,"message":"58","line":45,"column":13,"nodeType":"56","endLine":45,"endColumn":46},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]