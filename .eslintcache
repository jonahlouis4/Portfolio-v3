[{"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\index.js":"1","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\App.js":"2","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\reportWebVitals.js":"3","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Header.js":"4","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\SideNav.js":"5","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Introduction.js":"6","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Projects.js":"7","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\ProjectDisplay.js":"8","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Technologies.js":"9"},{"size":500,"mtime":1611938747404,"results":"10","hashOfConfig":"11"},{"size":1460,"mtime":1612755518231,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611938747404,"results":"13","hashOfConfig":"14"},{"size":1918,"mtime":1612757804222,"results":"15","hashOfConfig":"11"},{"size":1947,"mtime":1612369973314,"results":"16","hashOfConfig":"11"},{"size":2108,"mtime":1612754853831,"results":"17","hashOfConfig":"11"},{"size":2112,"mtime":1612754910323,"results":"18","hashOfConfig":"11"},{"size":1247,"mtime":1612373003810,"results":"19","hashOfConfig":"11"},{"size":607,"mtime":1612754930817,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1buv1cc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"o77mnd",{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\index.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\App.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\reportWebVitals.js",[],["42","43"],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Header.js",["44","45","46","47","48","49","50"],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\SideNav.js",["51","52","53","54"],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Introduction.js",["55"],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Projects.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\ProjectDisplay.js",["56","57"],"import React from 'react'\r\nimport { Card } from 'antd';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faReact, faPhp } from '@fortawesome/free-brands-svg-icons'\r\nimport { GithubOutlined, ExportOutlined } from '@ant-design/icons';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ProjectDisplay = ({iconName, projectName, description, github, url}) => {\r\n    \r\n    function iconDisplay() {\r\n        if (iconName === \"faReact\") {\r\n            // Color = #00d8ff\r\n            return <FontAwesomeIcon icon={faReact} size=\"6x\"/>\r\n        } else if (iconName === \"faPhp\") {\r\n            // Color = #8993be\r\n            return <FontAwesomeIcon icon={faPhp} size=\"6x\" style={{}}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card\r\n        hoverable\r\n        actions={[\r\n            <a href={github} target=\"_blank\"><GithubOutlined key=\"github\" /></a>,\r\n            <a href={url} target=\"_blank\"><ExportOutlined key=\"url\" /></a>\r\n            ]}\r\n        >\r\n            <div \r\n            style={{textAlign: 'center', paddingBottom: '20px'}}\r\n            >\r\n                {iconDisplay()}\r\n            </div>\r\n            <Meta title={projectName} description={description} />  \r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default ProjectDisplay\r\n","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Technologies.js",["58","59"],"import React from 'react'\r\n\r\nimport { Typography, Col, Row } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst sectionTitle = {\r\n    fontSize: '30px',\r\n    fontWeight: '100',\r\n    margin: '0',\r\n    padding: '0'\r\n}\r\n\r\nconst Technologies = () => {\r\n    return (\r\n        <div\r\n        style={{margin:'150px'}}\r\n        >\r\n            <div\r\n            style={{textAlign:'center'}}\r\n            >\r\n                <Title style={sectionTitle}><span style={{fontWeight: '500'}}>Technologies</span> I've been working with</Title>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Technologies\r\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":7,"column":9,"nodeType":"66","messageId":"67","endLine":7,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":54,"column":17,"nodeType":"71","endLine":54,"endColumn":46},{"ruleId":"72","severity":1,"message":"73","line":54,"column":46,"nodeType":"71","endLine":54,"endColumn":74},{"ruleId":"69","severity":1,"message":"70","line":59,"column":25,"nodeType":"71","endLine":59,"endColumn":89},{"ruleId":"69","severity":1,"message":"70","line":60,"column":25,"nodeType":"71","endLine":60,"endColumn":89},{"ruleId":"69","severity":1,"message":"70","line":61,"column":25,"nodeType":"71","endLine":61,"endColumn":89},{"ruleId":"69","severity":1,"message":"74","line":53,"column":13,"nodeType":"71","endLine":53,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":54,"column":13,"nodeType":"71","endLine":54,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":55,"column":13,"nodeType":"71","endLine":55,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":56,"column":13,"nodeType":"71","endLine":56,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":47,"column":70,"nodeType":"77","endLine":47,"endColumn":85},{"ruleId":"75","severity":1,"message":"76","line":26,"column":30,"nodeType":"77","endLine":26,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":27,"column":27,"nodeType":"77","endLine":27,"endColumn":42},{"ruleId":"64","severity":1,"message":"78","line":3,"column":22,"nodeType":"66","messageId":"67","endLine":3,"endColumn":25},{"ruleId":"64","severity":1,"message":"79","line":3,"column":27,"nodeType":"66","messageId":"67","endLine":3,"endColumn":30},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Title' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Col' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]