[{"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\index.js":"1","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\App.js":"2","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\reportWebVitals.js":"3","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Header.js":"4","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\SideNav.js":"5","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Introduction.js":"6","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Projects.js":"7","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\ProjectDisplay.js":"8","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Technologies.js":"9","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Footer.js":"10"},{"size":500,"mtime":1611938747404,"results":"11","hashOfConfig":"12"},{"size":2276,"mtime":1612929408996,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611938747404,"results":"15","hashOfConfig":"14"},{"size":3616,"mtime":1613693384403,"results":"16","hashOfConfig":"12"},{"size":2044,"mtime":1613679559485,"results":"17","hashOfConfig":"12"},{"size":3127,"mtime":1613693303270,"results":"18","hashOfConfig":"12"},{"size":3538,"mtime":1613695799789,"results":"19","hashOfConfig":"12"},{"size":1687,"mtime":1612973102520,"results":"20","hashOfConfig":"12"},{"size":5904,"mtime":1613695784833,"results":"21","hashOfConfig":"12"},{"size":469,"mtime":1612928134493,"results":"22","hashOfConfig":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1buv1cc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o77mnd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\index.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\App.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\reportWebVitals.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Header.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\SideNav.js",["44"],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Introduction.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Projects.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\ProjectDisplay.js",["45","46"],"import React from 'react'\r\nimport { Card } from 'antd';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faReact, faPhp } from '@fortawesome/free-brands-svg-icons'\r\nimport { GithubOutlined, ExportOutlined } from '@ant-design/icons';\r\n\r\nconst { Meta } = Card;\r\n\r\n/**\r\n * Returns a formatted card for each individual project\r\n * @param {string} iconName - Icon name for Font Awesome, language/framework of project\r\n * @param {string} projectName - The title of the project\r\n * @param {string} description - The description of the project\r\n * @param {string} github - The github url of the project\r\n * @param {string} url - the direct url of the project\r\n */\r\nconst ProjectDisplay = ({iconName, projectName, description, github, url}) => {\r\n    \r\n    /** Returns the appropriate icon */\r\n    function iconDisplay() {\r\n        if (iconName === \"faReact\") {\r\n            // Color = #00d8ff\r\n            return <FontAwesomeIcon icon={faReact} size=\"4x\"/>\r\n        } else if (iconName === \"faPhp\") {\r\n            // Color = #8993be\r\n            return <FontAwesomeIcon icon={faPhp} size=\"4x\"/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card\r\n        hoverable\r\n        actions={[\r\n            <a href={github} target=\"_blank\"><GithubOutlined key=\"github\" /></a>,\r\n            <a href={url} target=\"_blank\"><ExportOutlined key=\"url\" /></a>\r\n            ]}\r\n        >\r\n            <div \r\n            style={{textAlign:'center', paddingBottom:'20px', color:'#434343'}}\r\n            >\r\n                {iconDisplay()}\r\n            </div>\r\n            <Meta title={projectName} description={description} />  \r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default ProjectDisplay\r\n","E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Technologies.js",[],"E:\\Workspace\\Web Programming\\00_Templates\\portfolio-template-1\\src\\components\\Footer.js",[],{"ruleId":"47","severity":1,"message":"48","line":55,"column":13,"nodeType":"49","endLine":55,"endColumn":16},{"ruleId":"50","severity":1,"message":"51","line":35,"column":30,"nodeType":"52","endLine":35,"endColumn":45},{"ruleId":"50","severity":1,"message":"51","line":36,"column":27,"nodeType":"52","endLine":36,"endColumn":42},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute"]